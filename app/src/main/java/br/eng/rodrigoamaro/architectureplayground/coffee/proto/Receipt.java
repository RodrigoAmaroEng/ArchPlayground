// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: receipt.proto
package br.eng.rodrigoamaro.architectureplayground.coffee.proto;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;

import java.io.IOException;

import okio.ByteString;

public final class Receipt extends Message<Receipt, Receipt.Builder> {
    public static final ProtoAdapter<Receipt> ADAPTER = new ProtoAdapter_Receipt();
    public static final String DEFAULT_ORDERNUMBER = "";
    public static final Integer DEFAULT_AMOUNT = 0;
    private static final long serialVersionUID = 0L;
    @WireField(
            tag = 1,
            adapter = "com.squareup.wire.ProtoAdapter#STRING"
    )
    public final String orderNumber;

    @WireField(
            tag = 2,
            adapter = "com.squareup.wire.ProtoAdapter#INT32"
    )
    public final Integer amount;

    public Receipt(String orderNumber, Integer amount) {
        this(orderNumber, amount, ByteString.EMPTY);
    }

    public Receipt(String orderNumber, Integer amount, ByteString unknownFields) {
        super(ADAPTER, unknownFields);
        this.orderNumber = orderNumber;
        this.amount = amount;
    }

    @Override
    public Builder newBuilder() {
        Builder builder = new Builder();
        builder.orderNumber = orderNumber;
        builder.amount = amount;
        builder.addUnknownFields(unknownFields());
        return builder;
    }

    @Override
    public boolean equals(Object other) {
      if (other == this) {
        return true;
      }
      if (!(other instanceof Receipt)) {
        return false;
      }
        Receipt o = (Receipt) other;
        return unknownFields().equals(o.unknownFields())
                && Internal.equals(orderNumber, o.orderNumber)
                && Internal.equals(amount, o.amount);
    }

    @Override
    public int hashCode() {
        int result = super.hashCode;
        if (result == 0) {
            result = unknownFields().hashCode();
            result = result * 37 + (orderNumber != null ? orderNumber.hashCode() : 0);
            result = result * 37 + (amount != null ? amount.hashCode() : 0);
            super.hashCode = result;
        }
        return result;
    }

    @Override
    public String toString() {
        StringBuilder builder = new StringBuilder();
      if (orderNumber != null) {
        builder.append(", orderNumber=").append(orderNumber);
      }
      if (amount != null) {
        builder.append(", amount=").append(amount);
      }
        return builder.replace(0, 2, "Receipt{").append('}').toString();
    }

    public static final class Builder extends Message.Builder<Receipt, Builder> {
        public String orderNumber;

        public Integer amount;

        public Builder() {
        }

        public Builder orderNumber(String orderNumber) {
            this.orderNumber = orderNumber;
            return this;
        }

        public Builder amount(Integer amount) {
            this.amount = amount;
            return this;
        }

        @Override
        public Receipt build() {
            return new Receipt(orderNumber, amount, super.buildUnknownFields());
        }
    }

    private static final class ProtoAdapter_Receipt extends ProtoAdapter<Receipt> {
        public ProtoAdapter_Receipt() {
            super(FieldEncoding.LENGTH_DELIMITED, Receipt.class);
        }

        @Override
        public int encodedSize(Receipt value) {
            return ProtoAdapter.STRING.encodedSizeWithTag(1, value.orderNumber)
                    + ProtoAdapter.INT32.encodedSizeWithTag(2, value.amount)
                    + value.unknownFields().size();
        }

        @Override
        public void encode(ProtoWriter writer, Receipt value) throws IOException {
            ProtoAdapter.STRING.encodeWithTag(writer, 1, value.orderNumber);
            ProtoAdapter.INT32.encodeWithTag(writer, 2, value.amount);
            writer.writeBytes(value.unknownFields());
        }

        @Override
        public Receipt decode(ProtoReader reader) throws IOException {
            Builder builder = new Builder();
            long token = reader.beginMessage();
            for (int tag; (tag = reader.nextTag()) != -1; ) {
                switch (tag) {
                    case 1:
                        builder.orderNumber(ProtoAdapter.STRING.decode(reader));
                        break;
                    case 2:
                        builder.amount(ProtoAdapter.INT32.decode(reader));
                        break;
                    default: {
                        FieldEncoding fieldEncoding = reader.peekFieldEncoding();
                        Object value = fieldEncoding.rawProtoAdapter().decode(reader);
                        builder.addUnknownField(tag, fieldEncoding, value);
                    }
                }
            }
            reader.endMessage(token);
            return builder.build();
        }

        @Override
        public Receipt redact(Receipt value) {
            Builder builder = value.newBuilder();
            builder.clearUnknownFields();
            return builder.build();
        }
    }
}
